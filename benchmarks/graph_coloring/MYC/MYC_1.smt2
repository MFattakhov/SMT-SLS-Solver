(set-info :category "industrial")
(set-info :status sat)
(declare-fun x1 () (_ BitVec 32))
(declare-fun x2 () (_ BitVec 32))
(declare-fun x3 () (_ BitVec 32))
(declare-fun x4 () (_ BitVec 32))
(declare-fun x5 () (_ BitVec 32))
(declare-fun x6 () (_ BitVec 32))
(declare-fun x7 () (_ BitVec 32))
(declare-fun x8 () (_ BitVec 32))
(declare-fun x9 () (_ BitVec 32))
(declare-fun x10 () (_ BitVec 32))
(declare-fun x11 () (_ BitVec 32))
(assert (bvult x1 (_ bv4 32)))
(assert (bvult x2 (_ bv4 32)))
(assert (bvult x3 (_ bv4 32)))
(assert (bvult x4 (_ bv4 32)))
(assert (bvult x5 (_ bv4 32)))
(assert (bvult x6 (_ bv4 32)))
(assert (bvult x7 (_ bv4 32)))
(assert (bvult x8 (_ bv4 32)))
(assert (bvult x9 (_ bv4 32)))
(assert (bvult x10 (_ bv4 32)))
(assert (bvult x11 (_ bv4 32)))
(assert (not (= x1 x2)))
(assert (not (= x1 x4)))
(assert (not (= x1 x7)))
(assert (not (= x1 x9)))
(assert (not (= x2 x3)))
(assert (not (= x2 x6)))
(assert (not (= x2 x8)))
(assert (not (= x3 x5)))
(assert (not (= x3 x7)))
(assert (not (= x3 x10)))
(assert (not (= x4 x5)))
(assert (not (= x4 x6)))
(assert (not (= x4 x10)))
(assert (not (= x5 x8)))
(assert (not (= x5 x9)))
(assert (not (= x6 x11)))
(assert (not (= x7 x11)))
(assert (not (= x8 x11)))
(assert (not (= x9 x11)))
(assert (not (= x10 x11)))
(check-sat)
(exit)
